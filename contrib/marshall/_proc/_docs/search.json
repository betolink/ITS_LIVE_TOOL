[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "itslivetools",
    "section": "",
    "text": "import os\nThis file will become your README and also the index of your documentation."
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "itslivetools",
    "section": "Install",
    "text": "Install\npip install itslivetools"
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "itslivetools",
    "section": "How to use",
    "text": "How to use\nFirst, specify inputs. The inputs needed are: - the path to where centerline data is stored locally (os.path.join(data_gen_path, centerline_dir, centerline_14_path))), - path to where written objects will be stored (wd_path), - url to access OGGM data (l12_url), - the RGIId of the glacier for which you wish to access + process data (rgi_id), - the point on the glacier you are interested in (point) - label for that point (label).\n\nSetup\n\n#paths for centerline data\ndata_gen_path = '/uufs/chpc.utah.edu/common/home/cryosphere/emarshall/'\ncenterline_dir = 'oggm_flowlines/'\ncenterline_14_path = os.path.join(data_gen_path, centerline_dir, 'rgi_14/centerlines_smoothed_14.shp')\n#working dir path for oggm \nwd_path = '/uufs/chpc.utah.edu/common/home/u1269862/2023_fall/oggm_scratch'\nl12_url = 'https://cluster.klima.uni-bremen.de/~oggm/gdirs/oggm_v1.6/L1-L2_files/centerlines/'\n#ind glacier inputs \nrgi_id = 'RGI60-14.06794'\npoint = [76.3797, 35.7376]\nlabel = 'mid-glacier'\n\n\n\nThen, create an object of the Glacier class:\n\nbaltoro = access_setup.Glacier('baltoro', rgi_id, wd_path, l12_url, centerline_14_path, 'EPSG:32643')\n\n2023-10-12 12:11:54: oggm.cfg: Reading default parameters from the OGGM `params.cfg` configuration file.\n2023-10-12 12:11:54: oggm.cfg: Multiprocessing switched OFF according to the parameter file.\n2023-10-12 12:11:54: oggm.cfg: Multiprocessing: using slurm allocated processors (N=4)\n2023-10-12 12:11:54: oggm.cfg: Multiprocessing switched ON after user settings.\n2023-10-12 12:11:55: oggm.workflow: init_glacier_directories from prepro level 2 on 1 glaciers.\n2023-10-12 12:11:55: oggm.workflow: Execute entity tasks [gdir_from_prepro] on 1 glaciers\n2023-10-12 12:11:56: oggm.workflow: Execute entity tasks [glacier_masks] on 1 glaciers\n2023-10-12 12:12:00: oggm.workflow: Execute entity tasks [velocity_to_gdir] on 1 glaciers\n2023-10-12 12:12:01: oggm.workflow: Execute entity tasks [add_consensus_thickness] on 1 glaciers\n\n\nThis object has a number of properties and methods. The Glacier object stores information about the glacier including raster and vector datasets. All of the data in the Glacier object is static in time (ie. no image-pair time series, this data is stored in the Point object (currently): - A geopandas GeoDataFrame representing the main centerline as identified by OGGM (centerliner_main) - path to the locally stored file representing the centerlines - A geopandas GeoDataFrame representing all centerlines of the specified glacier (from OGGM) - The OGGM glacier directory for the specified glacier (g) - gridded_data An xarray Dataset containing gridded data from the OGGM directory for the specified glacier. This contains variables representing topography, land/glacier mask, x-component of velocity (ITS_LIVE mosaic), y-component of velocity (ITS_LIVE mosaic), magnitude of velocity (ITS_LIVE mosaic), ice thickness (consensus modelled ice thickness). All of this data is in EPSG:4326, latlon projection - utm_gridded_data, the same as gridded_data but projected to the local UTM zone -\n\n\nCreate object of Point class\n\nvar_ls = ['v','vy','vx','v_error','mapping','satellite_img1','satellite_img2','acquisition_date_img1', 'acquisition_date_img2']\n\n\nbaltoro_mid_point = access_setup.Point('Baltoro','RGI60-14.06794', baltoro, point, 'EPSG:32643', var_ls)\n\nNameError: name 'DATACUBETOOLS' is not defined"
  },
  {
    "objectID": "datacube_tools.html",
    "href": "datacube_tools.html",
    "title": "datacube_tools",
    "section": "",
    "text": "source\n\nDATACUBETOOLS\n\n DATACUBETOOLS (use_catalog='all')\n\nclass to encapsulate discovery and interaction with ITS_LIVE (its-live.jpl.nasa.gov) datacubes on AWS s3\n\nsource\n\n\ntimeseriesException\nCommon base class for all non-exit exceptions."
  },
  {
    "objectID": "core.html",
    "href": "core.html",
    "title": "core",
    "section": "",
    "text": "foo\n\n foo ()"
  },
  {
    "objectID": "access_setup.html",
    "href": "access_setup.html",
    "title": "02: access_setup – Data setup + prep",
    "section": "",
    "text": "from itslivetools import datacube_tools"
  },
  {
    "objectID": "access_setup.html#imports",
    "href": "access_setup.html#imports",
    "title": "02: access_setup – Data setup + prep",
    "section": "",
    "text": "from itslivetools import datacube_tools"
  },
  {
    "objectID": "access_setup.html#defining-classes",
    "href": "access_setup.html#defining-classes",
    "title": "02: access_setup – Data setup + prep",
    "section": "Defining classes",
    "text": "Defining classes\n\nsource\n\ncalc_min_tbaseline\n\n calc_min_tbaseline (Point)\n\n\nsource\n\n\nPoint\n\n Point (name, rgi_id, glacier_obj, point_coords_latlon, utm_crs, var_ls)\n\nInitialize self. See help(type(self)) for accurate signature.\n\nsource\n\n\nremove_empty_timesteps\n\n remove_empty_timesteps (ds)\n\n\nsource\n\n\nGlacier\n\n Glacier (name, rgi_id, working_dir_path, url, centerline_path, utm_crs)\n\nclass to hold all data associated with individual glacier inputs: name (str), rgi_id (str), working_dir_path (str, where oggm data should be written) url (str, url to oggm prepro data), centerline path (str, path to locally stored centerline data (wanted to have this not rely on local data but haven’t gotten that working yet)\n\nsource\n\n\npoint_to_gdf\n\n point_to_gdf (point_ls)"
  },
  {
    "objectID": "access_setup.html#examples---baltoro",
    "href": "access_setup.html#examples---baltoro",
    "title": "02: access_setup – Data setup + prep",
    "section": "Examples - baltoro",
    "text": "Examples - baltoro\n\nInputs\n\n#paths for centerline data\ndata_gen_path = '/uufs/chpc.utah.edu/common/home/cryosphere/emarshall/'\ncenterline_dir = 'oggm_flowlines/'\ncenterline_14_path = os.path.join(data_gen_path, centerline_dir, 'rgi_14/centerlines_smoothed_14.shp')\n#working dir path for oggm \nwd_path = '/uufs/chpc.utah.edu/common/home/u1269862/2023_fall/oggm_scratch'\nl12_url = 'https://cluster.klima.uni-bremen.de/~oggm/gdirs/oggm_v1.6/L1-L2_files/centerlines/'\n#ind glacier inputs \nrgi_id = 'RGI60-14.06794'\npoint = [76.3797, 35.7376]\nlabel = 'mid-glacier'\n\n\n\nGlacier\n\nbaltoro = Glacier('baltoro', rgi_id, wd_path, l12_url, centerline_14_path, 'EPSG:32643')\n\n2023-10-12 12:08:08: oggm.cfg: Reading default parameters from the OGGM `params.cfg` configuration file.\n2023-10-12 12:08:08: oggm.cfg: Multiprocessing switched OFF according to the parameter file.\n2023-10-12 12:08:08: oggm.cfg: Multiprocessing: using slurm allocated processors (N=4)\n2023-10-12 12:08:08: oggm.cfg: Multiprocessing switched ON after user settings.\n2023-10-12 12:08:10: oggm.workflow: init_glacier_directories from prepro level 2 on 1 glaciers.\n2023-10-12 12:08:10: oggm.workflow: Execute entity tasks [gdir_from_prepro] on 1 glaciers\n2023-10-12 12:08:12: oggm.workflow: Execute entity tasks [glacier_masks] on 1 glaciers\n2023-10-12 12:08:16: oggm.workflow: Execute entity tasks [velocity_to_gdir] on 1 glaciers\n2023-10-12 12:08:18: oggm.workflow: Execute entity tasks [add_consensus_thickness] on 1 glaciers\n\n\n\nbaltoro.centerline_gridded_data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.Dataset&gt;\nDimensions:                  (y: 46, x: 276)\nCoordinates:\n  * x                        (x) float64 6.045e+05 6.047e+05 ... 6.595e+05\n  * y                        (y) float64 3.957e+06 3.957e+06 ... 3.948e+06\n    spatial_ref              int64 0\nData variables:\n    topo                     (y, x) float32 nan nan nan ... 7.31e+03 7.286e+03\n    topo_smoothed            (y, x) float32 nan nan nan ... 7.284e+03 7.229e+03\n    topo_valid_mask          (y, x) float32 -15.0 -15.0 -15.0 ... 1.0 1.0 1.0\n    glacier_mask             (y, x) float32 -15.0 -15.0 -15.0 ... 1.0 1.0 0.0\n    glacier_ext              (y, x) float32 -15.0 -15.0 -15.0 ... 0.0 1.0 0.0\n    itslive_vx               (y, x) float32 nan nan nan ... -2.769 -1.208 0.2926\n    itslive_vy               (y, x) float32 nan nan nan ... 3.867 2.412 1.224\n    itslive_v                (y, x) float32 nan nan nan ... 4.756 2.697 1.259\n    consensus_ice_thickness  (y, x) float32 nan nan nan nan ... 85.48 40.17 nan\nAttributes:\n    units:       m\n    long_name:   DEM topography\n    _FillValue:  -9999.0xarray.DatasetDimensions:y: 46x: 276Coordinates: (3)x(x)float646.045e+05 6.047e+05 ... 6.595e+05axis :Xlong_name :x coordinate of projectionstandard_name :projection_x_coordinateunits :metrearray([604455.86011 , 604655.90001 , 604855.93991 , ..., 659066.752728,\n       659266.792628, 659466.832527])y(y)float643.957e+06 3.957e+06 ... 3.948e+06axis :Ylong_name :y coordinate of projectionstandard_name :projection_y_coordinateunits :metrearray([3956926.894491, 3956726.854591, 3956526.814691, 3956326.774792,\n       3956126.734892, 3955926.694992, 3955726.655092, 3955526.615193,\n       3955326.575293, 3955126.535393, 3954926.495494, 3954726.455594,\n       3954526.415694, 3954326.375795, 3954126.335895, 3953926.295995,\n       3953726.256095, 3953526.216196, 3953326.176296, 3953126.136396,\n       3952926.096497, 3952726.056597, 3952526.016697, 3952325.976798,\n       3952125.936898, 3951925.896998, 3951725.857098, 3951525.817199,\n       3951325.777299, 3951125.737399, 3950925.6975  , 3950725.6576  ,\n       3950525.6177  , 3950325.577801, 3950125.537901, 3949925.498001,\n       3949725.458102, 3949525.418202, 3949325.378302, 3949125.338402,\n       3948925.298503, 3948725.258603, 3948525.218703, 3948325.178804,\n       3948125.138904, 3947925.099004])spatial_ref()int640crs_wkt :PROJCS[\"WGS 84 / UTM zone 43N\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",75],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32643\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984projected_crs_name :WGS 84 / UTM zone 43Ngrid_mapping_name :transverse_mercatorlatitude_of_projection_origin :0.0longitude_of_central_meridian :75.0false_easting :500000.0false_northing :0.0scale_factor_at_central_meridian :0.9996spatial_ref :PROJCS[\"WGS 84 / UTM zone 43N\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",75],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32643\"]]GeoTransform :604355.8401605176 200.03989969757683 0.0 3957026.9144404633 0.0 -200.03989969757902array(0)Data variables: (9)topo(y, x)float32nan nan nan ... 7.31e+03 7.286e+03units :mlong_name :DEM topography_FillValue :-9999.0array([[  nan,   nan,   nan, ...,   nan,   nan,   nan],\n       [  nan,   nan,   nan, ...,   nan,   nan,   nan],\n       [  nan,   nan,   nan, ...,   nan,   nan,   nan],\n       ...,\n       [  nan,   nan,   nan, ...,   nan,   nan,   nan],\n       [  nan,   nan,   nan, ..., 7267.,   nan,   nan],\n       [  nan,   nan,   nan, ..., 7251., 7310., 7286.]], dtype=float32)topo_smoothed(y, x)float32nan nan nan ... 7.284e+03 7.229e+03units :mlong_name :DEM topography smoothed with radius: 3e+02 m_FillValue :-9999.0array([[      nan,       nan,       nan, ...,       nan,       nan,\n              nan],\n       [      nan,       nan,       nan, ...,       nan,       nan,\n              nan],\n       [      nan,       nan,       nan, ...,       nan,       nan,\n              nan],\n       ...,\n       [      nan,       nan,       nan, ...,       nan,       nan,\n              nan],\n       [      nan,       nan,       nan, ..., 7244.532 ,       nan,\n              nan],\n       [      nan,       nan,       nan, ..., 7250.9307, 7283.8833,\n        7228.7036]], dtype=float32)topo_valid_mask(y, x)float32-15.0 -15.0 -15.0 ... 1.0 1.0 1.0units :-long_name :DEM validity mask according to geotiff input (1-0)_FillValue :-15array([[-15., -15., -15., ..., -15., -15., -15.],\n       [-15., -15., -15., ..., -15., -15., -15.],\n       [-15., -15., -15., ..., -15., -15., -15.],\n       ...,\n       [-15., -15., -15., ..., -15., -15., -15.],\n       [-15., -15., -15., ...,   1., -15., -15.],\n       [-15., -15., -15., ...,   1.,   1.,   1.]], dtype=float32)glacier_mask(y, x)float32-15.0 -15.0 -15.0 ... 1.0 1.0 0.0units :-long_name :Glacier mask_FillValue :-15array([[-15., -15., -15., ..., -15., -15., -15.],\n       [-15., -15., -15., ..., -15., -15., -15.],\n       [-15., -15., -15., ..., -15., -15., -15.],\n       ...,\n       [-15., -15., -15., ..., -15., -15., -15.],\n       [-15., -15., -15., ...,   1., -15., -15.],\n       [-15., -15., -15., ...,   1.,   1.,   0.]], dtype=float32)glacier_ext(y, x)float32-15.0 -15.0 -15.0 ... 0.0 1.0 0.0units :-long_name :Glacier external boundaries_FillValue :-15array([[-15., -15., -15., ..., -15., -15., -15.],\n       [-15., -15., -15., ..., -15., -15., -15.],\n       [-15., -15., -15., ..., -15., -15., -15.],\n       ...,\n       [-15., -15., -15., ..., -15., -15., -15.],\n       [-15., -15., -15., ...,   0., -15., -15.],\n       [-15., -15., -15., ...,   0.,   1.,   0.]], dtype=float32)itslive_vx(y, x)float32nan nan nan ... -1.208 0.2926units :m yr-1long_name :ITS LIVE velocity data in x map direction_FillValue :-9999.0array([[        nan,         nan,         nan, ...,         nan,\n                nan,         nan],\n       [        nan,         nan,         nan, ...,         nan,\n                nan,         nan],\n       [        nan,         nan,         nan, ...,         nan,\n                nan,         nan],\n       ...,\n       [        nan,         nan,         nan, ...,         nan,\n                nan,         nan],\n       [        nan,         nan,         nan, ..., -1.3856227 ,\n                nan,         nan],\n       [        nan,         nan,         nan, ..., -2.7694283 ,\n        -1.2084576 ,  0.29255491]], dtype=float32)itslive_vy(y, x)float32nan nan nan ... 3.867 2.412 1.224long_name :ITS LIVE velocity data in y map directionunits :m yr-1_FillValue :-9999.0array([[      nan,       nan,       nan, ...,       nan,       nan,\n              nan],\n       [      nan,       nan,       nan, ...,       nan,       nan,\n              nan],\n       [      nan,       nan,       nan, ...,       nan,       nan,\n              nan],\n       ...,\n       [      nan,       nan,       nan, ...,       nan,       nan,\n              nan],\n       [      nan,       nan,       nan, ..., 1.5896859,       nan,\n              nan],\n       [      nan,       nan,       nan, ..., 3.8668942, 2.4116654,\n        1.2242756]], dtype=float32)itslive_v(y, x)float32nan nan nan ... 4.756 2.697 1.259units :m yr-1long_name :ITS LIVE velocity dataarray([[      nan,       nan,       nan, ...,       nan,       nan,\n              nan],\n       [      nan,       nan,       nan, ...,       nan,       nan,\n              nan],\n       [      nan,       nan,       nan, ...,       nan,       nan,\n              nan],\n       ...,\n       [      nan,       nan,       nan, ...,       nan,       nan,\n              nan],\n       [      nan,       nan,       nan, ..., 2.1088033,       nan,\n              nan],\n       [      nan,       nan,       nan, ..., 4.7563224, 2.6974988,\n        1.2587451]], dtype=float32)consensus_ice_thickness(y, x)float32nan nan nan nan ... 85.48 40.17 nanunits :mlong_name :Ice thickness from the consensus estimatebase_url :https://cluster.klima.uni-bremen.de/~fmaussion/icevol/composite/_FillValue :-9999.0array([[      nan,       nan,       nan, ...,       nan,       nan,\n              nan],\n       [      nan,       nan,       nan, ...,       nan,       nan,\n              nan],\n       [      nan,       nan,       nan, ...,       nan,       nan,\n              nan],\n       ...,\n       [      nan,       nan,       nan, ...,       nan,       nan,\n              nan],\n       [      nan,       nan,       nan, ..., 93.9393  ,       nan,\n              nan],\n       [      nan,       nan,       nan, ..., 85.47908 , 40.167786,\n              nan]], dtype=float32)Indexes: (2)xPandasIndexPandasIndex(Float64Index([604455.8601103664,  604655.900010064, 604855.9399097615,\n              605055.9798094592, 605256.0197091567, 605456.0596088542,\n              605656.0995085519, 605856.1394082494,  606056.179307947,\n              606256.2192076446,\n              ...\n              657666.4734299218, 657866.5133296194,  658066.553229317,\n              658266.5931290146, 658466.6330287121, 658666.6729284097,\n              658866.7128281073, 659066.7527278048, 659266.7926275025,\n                 659466.8325272],\n             dtype='float64', name='x', length=276))yPandasIndexPandasIndex(Float64Index([3956926.8944906145, 3956726.8545909165,  3956526.814691219,\n              3956326.7747915215,  3956126.734891824, 3955926.6949921264,\n               3955726.655092429, 3955526.6151927314,  3955326.575293034,\n              3955126.5353933363,  3954926.495493639,  3954726.455593941,\n              3954526.4156942433, 3954326.3757945457,  3954126.335894848,\n              3953926.2959951507,  3953726.256095453, 3953526.2161957556,\n               3953326.176296058, 3953126.1363963606, 3952926.0964966626,\n               3952726.056596965, 3952526.0166972675,   3952325.97679757,\n              3952125.9368978725,  3951925.896998175, 3951725.8570984774,\n                3951525.81719878, 3951325.7772990824, 3951125.7373993844,\n               3950925.697499687, 3950725.6575999893,  3950525.617700292,\n              3950325.5778005943, 3950125.5379008967,  3949925.498001199,\n              3949725.4581015017,  3949525.418201804, 3949325.3783021066,\n              3949125.3384024086,  3948925.298502711, 3948725.2586030136,\n               3948525.218703316, 3948325.1788036185,  3948125.138903921,\n              3947925.0990042235],\n             dtype='float64', name='y'))Attributes: (3)units :mlong_name :DEM topography_FillValue :-9999.0\n\n\n\nTake a look at itslive mosaic along flowline:\n\nbaltoro.outline.to_crs(baltoro.utm_crs).hvplot(color='None')*baltoro.centerline_gridded_data.itslive_v.hvplot(cmap='viridis')\n\n\n\n\n\n  \n\n\n\n\n\n\nBaltoro centerline DEM (L) and itslive mosaic (R)\n\nbaltoro.centerline_gridded_data.topo.hvplot(cmap='viridis') + baltoro.centerline_gridded_data.itslive_v.hvplot(cmap='viridis')\n\n\n\n\n\n  \n\n\n\n\n\ngraphics.plot_googlemap(baltoro.g)\n\n\n\n\n\ntopo_ext = baltoro.gridded_data.topo.where(baltoro.gridded_data.glacier_mask==1)\nterminus = topo_ext.where(topo_ext==topo_ext.min(),drop=True)\n\n\nterminus\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray 'topo' (y: 1, x: 1)&gt;\narray([[3397.]], dtype=float32)\nCoordinates:\n  * x            (x) float32 -2.264e+04\n  * y            (y) float32 3.95e+06\n    spatial_ref  int64 0\nAttributes:\n    units:       m\n    long_name:   DEM topography\n    _FillValue:  -9999.0xarray.DataArray'topo'y: 1x: 13.397e+03array([[3397.]], dtype=float32)Coordinates: (3)x(x)float32-2.264e+04units :mlong_name :x coordinate of projectionstandard_name :projection_x_coordinatearray([-22638.053], dtype=float32)y(y)float323.95e+06units :mlong_name :y coordinate of projectionstandard_name :projection_y_coordinatearray([3949727.], dtype=float32)spatial_ref()int640crs_wkt :PROJCS[\"unknown\",GEOGCS[\"unknown\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",76.4047],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",0],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :unknownhorizontal_datum_name :World Geodetic System 1984projected_crs_name :unknowngrid_mapping_name :transverse_mercatorlatitude_of_projection_origin :0.0longitude_of_central_meridian :76.4047false_easting :0.0false_northing :0.0scale_factor_at_central_meridian :0.9996spatial_ref :PROJCS[\"unknown\",GEOGCS[\"unknown\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",76.4047],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",0],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH]]array(0)Indexes: (2)xPandasIndexPandasIndex(Float64Index([-22638.052734375], dtype='float64', name='x'))yPandasIndexPandasIndex(Float64Index([3949727.0], dtype='float64', name='y'))Attributes: (3)units :mlong_name :DEM topography_FillValue :-9999.0\n\n\n\n\n\nPoint\n\nvar_ls = ['v','vy','vx','v_error','mapping','satellite_img1','satellite_img2','acquisition_date_img1', 'acquisition_date_img2']\n\n\nbaltoro_mid_point = Point('Baltoro','RGI60-14.06794', baltoro, point, 'EPSG:32643', var_ls)\n\noriginal xy [76.3797, 35.7376] 4326 maps to datacube (624763.5766152533, 3955722.574253059) EPSG:32643\noriginal xy [76.3797, 35.7376] 4326 maps to datacube (624763.5766152533, 3955722.574253059) EPSG:32643\nsubset and load at  28.81 seconds\n\n\n\n#this extracts a 3x3 cube of the image pair dataset surrounding a given point \nbaltoro_mid_point.cube_around_point\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.Dataset&gt;\nDimensions:                (mid_date: 4080, x: 3, y: 3)\nCoordinates:\n  * mid_date               (mid_date) datetime64[ns] 2020-02-12T05:49:11.0350...\n  * x                      (x) float64 6.247e+05 6.248e+05 6.249e+05\n  * y                      (y) float64 3.956e+06 3.956e+06 3.956e+06\n    step_count             (mid_date) int64 22 26 27 33 ... 22739 22749 22759\n    mapping                int64 0\nData variables:\n    v                      (mid_date, y, x) float32 107.0 107.0 ... nan nan\n    vy                     (mid_date, y, x) float32 -12.0 -14.0 ... nan nan\n    vx                     (mid_date, y, x) float32 -106.0 -106.0 ... nan nan\n    v_error                (mid_date, y, x) float32 2.0 2.0 2.0 ... nan nan nan\n    satellite_img1         (mid_date) object '2A' '2A' '2B' ... '8.0' '8.0'\n    satellite_img2         (mid_date) object '2A' '2A' '2B' ... '8.0' '8.0'\n    acquisition_date_img1  (mid_date) datetime64[ns] 2019-08-01T05:49:09.9999...\n    acquisition_date_img2  (mid_date) datetime64[ns] 2020-08-25T05:49:12 ... ...\n    img_separation         (mid_date) float64 391.0 10.0 10.0 ... 288.0 449.0\nAttributes: (12/18)\n    GDAL_AREA_OR_POINT:         Area\n    author:                     ITS_LIVE, a NASA MEaSUREs project (its-live.j...\n    autoRIFT_parameter_file:    http://its-live-data.s3.amazonaws.com/autorif...\n    datacube_software_version:  1.0\n    date_created:               14-Jun-2022 04:36:00\n    date_updated:               14-Jun-2022 04:36:00\n    ...                         ...\n    s3:                         s3://its-live-data/datacubes/v02/N30E070/ITS_...\n    skipped_granules:           s3://its-live-data/datacubes/v02/N30E070/ITS_...\n    time_standard_img1:         UTC\n    time_standard_img2:         UTC\n    title:                      ITS_LIVE datacube of image_pair velocities\n    url:                        https://its-live-data.s3.amazonaws.com/datacu...xarray.DatasetDimensions:mid_date: 4080x: 3y: 3Coordinates: (5)mid_date(mid_date)datetime64[ns]2020-02-12T05:49:11.035076096 .....description :midpoint of image 1 and image 2 acquisition date and time with granule's centroid longitude and latitude as microsecondsstandard_name :image_pair_center_date_with_time_separationarray(['2020-02-12T05:49:11.035076096', '2021-08-25T05:49:07.535076096',\n       '2021-11-18T05:49:03.535076096', ..., '2016-02-29T05:29:11.536076032',\n       '2015-04-15T05:29:12.536076032', '2016-04-17T05:29:18.036076032'],\n      dtype='datetime64[ns]')x(x)float646.247e+05 6.248e+05 6.249e+05description :x coordinate of projectionstandard_name :projection_x_coordinateaxis :Xlong_name :x coordinate of projectionunits :metrearray([624652.5, 624772.5, 624892.5])y(y)float643.956e+06 3.956e+06 3.956e+06description :y coordinate of projectionstandard_name :projection_y_coordinateaxis :Ylong_name :y coordinate of projectionunits :metrearray([3955867.5, 3955747.5, 3955627.5])step_count(mid_date)int6422 26 27 33 ... 22739 22749 22759array([   22,    26,    27, ..., 22739, 22749, 22759])mapping()int640crs_wkt :PROJCS[\"WGS 84 / UTM zone 43N\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",75],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32643\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984projected_crs_name :WGS 84 / UTM zone 43Ngrid_mapping_name :transverse_mercatorlatitude_of_projection_origin :0.0longitude_of_central_meridian :75.0false_easting :500000.0false_northing :0.0scale_factor_at_central_meridian :0.9996spatial_ref :PROJCS[\"WGS 84 / UTM zone 43N\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",75],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32643\"]]GeoTransform :624592.5 120.0 0.0 3955927.5 0.0 -120.0array(0)Data variables: (9)v(mid_date, y, x)float32107.0 107.0 109.0 ... nan nan nandescription :velocity magnitudegrid_mapping :mappingstandard_name :velocityunits :m/yarray([[[107., 107., 109.],\n        [107., 107., 110.],\n        [109., 110., 112.]],\n\n       [[ nan,  nan,  nan],\n        [ nan,  nan,  nan],\n        [ nan,  nan,  nan]],\n\n       [[ 32.,  51.,  51.],\n        [ 23.,  51.,  23.],\n        [ 65.,  65.,  65.]],\n\n       ...,\n\n       [[ nan,  nan,  nan],\n        [ nan,  nan,  nan],\n        [ nan,  nan,  nan]],\n\n       [[ nan,  nan,  nan],\n        [ nan,  nan,  nan],\n        [ nan,  nan,  nan]],\n\n       [[ nan,  nan,  nan],\n        [ nan,  nan,  nan],\n        [ nan,  nan,  nan]]], dtype=float32)vy(mid_date, y, x)float32-12.0 -14.0 -19.0 ... nan nan nandescription :velocity component in y directiongrid_mapping :mappingstandard_name :y_velocityunits :m/yarray([[[-12., -14., -19.],\n        [-12., -14., -20.],\n        [-15., -19., -22.]],\n\n       [[ nan,  nan,  nan],\n        [ nan,  nan,  nan],\n        [ nan,  nan,  nan]],\n\n       [[-23., -46., -23.],\n        [  0.,  23.,   0.],\n        [ 46.,  46.,  46.]],\n\n       ...,\n\n       [[ nan,  nan,  nan],\n        [ nan,  nan,  nan],\n        [ nan,  nan,  nan]],\n\n       [[ nan,  nan,  nan],\n        [ nan,  nan,  nan],\n        [ nan,  nan,  nan]],\n\n       [[ nan,  nan,  nan],\n        [ nan,  nan,  nan],\n        [ nan,  nan,  nan]]], dtype=float32)vx(mid_date, y, x)float32-106.0 -106.0 -108.0 ... nan nandescription :velocity component in x directiongrid_mapping :mappingstandard_name :x_velocityunits :m/yarray([[[-106., -106., -108.],\n        [-106., -106., -108.],\n        [-108., -109., -109.]],\n\n       [[  nan,   nan,   nan],\n        [  nan,   nan,   nan],\n        [  nan,   nan,   nan]],\n\n       [[ -23.,  -23.,  -46.],\n        [ -23.,  -46.,  -23.],\n        [ -46.,  -46.,  -46.]],\n\n       ...,\n\n       [[  nan,   nan,   nan],\n        [  nan,   nan,   nan],\n        [  nan,   nan,   nan]],\n\n       [[  nan,   nan,   nan],\n        [  nan,   nan,   nan],\n        [  nan,   nan,   nan]],\n\n       [[  nan,   nan,   nan],\n        [  nan,   nan,   nan],\n        [  nan,   nan,   nan]]], dtype=float32)v_error(mid_date, y, x)float322.0 2.0 2.0 2.0 ... nan nan nan nandescription :velocity magnitude errorgrid_mapping :mappingstandard_name :velocity_errorunits :m/yarray([[[ 2.,  2.,  2.],\n        [ 2.,  2.,  2.],\n        [ 2.,  2.,  2.]],\n\n       [[nan, nan, nan],\n        [nan, nan, nan],\n        [nan, nan, nan]],\n\n       [[46., 50., 42.],\n        [39., 42., 39.],\n        [46., 46., 46.]],\n\n       ...,\n\n       [[nan, nan, nan],\n        [nan, nan, nan],\n        [nan, nan, nan]],\n\n       [[nan, nan, nan],\n        [nan, nan, nan],\n        [nan, nan, nan]],\n\n       [[nan, nan, nan],\n        [nan, nan, nan],\n        [nan, nan, nan]]], dtype=float32)satellite_img1(mid_date)object'2A' '2A' '2B' ... '8.0' '8.0'description :id of the satellite that acquired image 1standard_name :image1_satellitearray(['2A', '2A', '2B', ..., '8.0', '8.0', '8.0'], dtype=object)satellite_img2(mid_date)object'2A' '2A' '2B' ... '8.0' '8.0'description :id of the satellite that acquired image 2standard_name :image2_satellitearray(['2A', '2A', '2B', ..., '8.0', '8.0', '8.0'], dtype=object)acquisition_date_img1(mid_date)datetime64[ns]2019-08-01T05:49:09.999999744 .....array(['2019-08-01T05:49:09.999999744', '2021-08-20T05:49:08.000000000',\n       '2021-11-13T05:49:05.000000000', ...,\n       '2015-09-06T05:29:03.000000000', '2014-11-22T05:29:22.000000000',\n       '2015-09-06T05:29:03.000000000'], dtype='datetime64[ns]')acquisition_date_img2(mid_date)datetime64[ns]2020-08-25T05:49:12 ... 2016-11-...array(['2020-08-25T05:49:12.000000000', '2021-08-30T05:49:07.000000000',\n       '2021-11-23T05:49:02.000000000', ...,\n       '2016-08-23T05:29:19.999999744', '2015-09-06T05:29:03.000000000',\n       '2016-11-27T05:29:33.000000000'], dtype='datetime64[ns]')img_separation(mid_date)float64391.0 10.0 10.0 ... 288.0 449.0array([391.,  10.,  10., ..., 353., 288., 449.])Indexes: (3)mid_datePandasIndexPandasIndex(DatetimeIndex(['2020-02-12 05:49:11.035076096',\n               '2021-08-25 05:49:07.535076096',\n               '2021-11-18 05:49:03.535076096',\n               '2022-01-09 17:49:07.035076096',\n               '2021-09-14 05:49:05.035076096',\n               '2021-12-18 05:49:03.535076096',\n               '2021-11-30 17:49:09.035076096',\n               '2021-12-05 17:49:04.035076096',\n               '2021-08-02 17:49:06.535076096',\n               '2022-02-03 17:49:03.035076096',\n               ...\n               '2015-05-25 05:29:04.036076032',\n               '2015-12-03 05:29:04.536076032',\n               '2015-12-19 05:28:57.536076288',\n               '2015-12-11 05:29:02.536076032',\n               '2015-06-10 05:28:56.036076032',\n               '2015-05-01 05:29:11.036075776',\n               '2015-12-27 05:28:55.036076032',\n               '2016-02-29 05:29:11.536076032',\n               '2015-04-15 05:29:12.536076032',\n               '2016-04-17 05:29:18.036076032'],\n              dtype='datetime64[ns]', name='mid_date', length=4080, freq=None))xPandasIndexPandasIndex(Float64Index([624652.5, 624772.5, 624892.5], dtype='float64', name='x'))yPandasIndexPandasIndex(Float64Index([3955867.5, 3955747.5, 3955627.5], dtype='float64', name='y'))Attributes: (18)GDAL_AREA_OR_POINT :Areaauthor :ITS_LIVE, a NASA MEaSUREs project (its-live.jpl.nasa.gov)autoRIFT_parameter_file :http://its-live-data.s3.amazonaws.com/autorift_parameters/v001/autorift_landice_0120m.shpdatacube_software_version :1.0date_created :14-Jun-2022 04:36:00date_updated :14-Jun-2022 04:36:00geo_polygon :[[76.09904081237153, 35.238087535407686], [76.37373771395167, 35.23528114245287], [76.64839243229527, 35.23185167489208], [76.92299654851548, 35.22779947344429], [77.19754165339832, 35.22312494055522], [77.20365107689102, 35.44838172077875], [77.20982866216805, 35.6736291528239], [77.2160751727205, 35.89886720154926], [77.22239138543658, 36.12409583213699], [76.94474681612479, 36.12892718369556], [76.66704053712027, 36.133115341322544], [76.3892813413495, 36.13665988259089], [76.11147803222622, 36.13956044986026], [76.10831675620092, 35.914205268516355], [76.10519038612571, 35.68884137224295], [76.10209853245563, 35.46346878604592], [76.09904081237153, 35.238087535407686]]institution :NASA Jet Propulsion Laboratory (JPL), California Institute of Technologylatitude :35.68longitude :76.66proj_polygon :[[600000, 3900000], [625000.0, 3900000.0], [650000.0, 3900000.0], [675000.0, 3900000.0], [700000, 3900000], [700000.0, 3925000.0], [700000.0, 3950000.0], [700000.0, 3975000.0], [700000, 4000000], [675000.0, 4000000.0], [650000.0, 4000000.0], [625000.0, 4000000.0], [600000, 4000000], [600000.0, 3975000.0], [600000.0, 3950000.0], [600000.0, 3925000.0], [600000, 3900000]]projection :32643s3 :s3://its-live-data/datacubes/v02/N30E070/ITS_LIVE_vel_EPSG32643_G0120_X650000_Y3950000.zarrskipped_granules :s3://its-live-data/datacubes/v02/N30E070/ITS_LIVE_vel_EPSG32643_G0120_X650000_Y3950000.jsontime_standard_img1 :UTCtime_standard_img2 :UTCtitle :ITS_LIVE datacube of image_pair velocitiesurl :https://its-live-data.s3.amazonaws.com/datacubes/v02/N30E070/ITS_LIVE_vel_EPSG32643_G0120_X650000_Y3950000.zarr\n\n\n\nbaltoro_mid_point.TRIM_padded_centerline_subcube.v.mean(dim='mid_date').hvplot()*baltoro_mid_point.cube_around_point.mean(dim='mid_date').v.hvplot(cmap='plasma')\n\n\n\n\n\n  \n\n\n\n\n\nfig, ax = plt.subplots()\nbaltoro_mid_point.datacube_sub.v.mean(dim='mid_date').plot(ax=ax)\nbaltoro.centerline_main.to_crs(baltoro.utm_crs).plot(ax=ax, color='red')\nbaltoro_mid_point.point_gdf.to_crs(baltoro_mid_point.utm_crs).plot(ax=ax, color='orange')\nfig.suptitle('Baltoro: \\n Sub-cube (83x83) accessed via itslive datacube tools, main centerline (oggm), central point (orange)');"
  },
  {
    "objectID": "access_setup.html#full-dataset-spatial-median-of-9-pixels-surrounding-point-on-centerline-left-baltoro-outline-and-location-of-points-right",
    "href": "access_setup.html#full-dataset-spatial-median-of-9-pixels-surrounding-point-on-centerline-left-baltoro-outline-and-location-of-points-right",
    "title": "02: access_setup – Data setup + prep",
    "section": "full dataset (spatial median of 9 pixels surrounding point on centerline) (Left) – Baltoro outline and location of points (Right)",
    "text": "full dataset (spatial median of 9 pixels surrounding point on centerline) (Left) – Baltoro outline and location of points (Right)\n\nbaltoro_mid_point.cube_around_point.v.median(dim=['x','y']).hvplot.scatter(x='mid_date') + (baltoro.outline.to_crs('EPSG:32643').hvplot(color='None') * baltoro_mid_point.cube_around_point.v.mean(dim='mid_date').hvplot(cmap='reds'))\n\n\n\n\n\n  \n\n\n\n\n\nLeft: trimmed time series (median of 3x3 cube along centerline), Right: baltoro outline, cube\n\nbaltoro_mid_point.TRIM_cube_around_point.v.median(dim=['x','y']).hvplot.scatter(x='mid_date') + (baltoro.outline.to_crs('EPSG:32643').hvplot(color='None') *baltoro_mid_point.TRIM_cube_around_point.v.mean(dim='mid_date').hvplot(cmap='reds'))"
  },
  {
    "objectID": "access_setup.html#next-steps",
    "href": "access_setup.html#next-steps",
    "title": "02: access_setup – Data setup + prep",
    "section": "Next steps",
    "text": "Next steps\n\nhorizontal span time series plots to show data excluded by the temporal baseline threshold filter\nfinalize thresholding approach ideally, data that doesn’t pass the filter isn’t entirely excluded (maybe there is a 2-tier threshold where below 1 (loqwe) temp baseline data is excluded, and an intermediate threshold below which credibility is negatively weighted\nregression on remaining obs that pass thresholding to arrive at descriptive function, credibility intervals\n\n\n!pwd\n\n/uufs/chpc.utah.edu/common/home/u1269862/2023_fall/itslivetools/nbs\n\n\n\nTest - GP implementation on point/cube\n\nbaltoro_mid_point_cube_df = baltoro_mid_point.cube_around_point[['v','img_separation']].to_dataframe()\n\n\nbaltoro_mid_point_cube_df = baltoro_mid_point_cube_df.reset_index()\n\n\n#df['mid_date'] = pd.to_datetime(df['mid_date'])\n#df = df.sort_values(by='mid_date')\n#df['days_since_middate0'] = [i.days for i in df['mid_date'] - df['mid_date'].iloc[0]]\n\nbaltoro_mid_point_cube_df = baltoro_mid_point_cube_df.sort_values(by='mid_date')\nbaltoro_mid_point_cube_df['days_since_middate0'] = [i.days for i in baltoro_mid_point_cube_df['mid_date'] - baltoro_mid_point_cube_df['mid_date'].iloc[0]]\n\n\ndef select_point_filter_baselines(df, cutoff1, cutoff2, cutoff3):\n\n    #df_pt = df.loc[df['real_label'] == point]\n    df_pt = df\n    df_pt = df_pt.dropna(subset=['v'])\n\n    df_short = df_pt.loc[(df_pt['img_separation'] &gt;= cutoff1) & (df_pt['img_separation'] &lt; cutoff2)]\n    df_med = df_pt.loc[(df_pt['img_separation'] &gt;= cutoff2) & (df_pt['img_separation'] &lt; cutoff3)]\n    df_long = df_pt.loc[(df_pt['img_separation'] &gt;= cutoff3) & (df_pt['img_separation'] &lt; cutuff4)]\n    df_extralong = df_pt.loc[df_pt['img_separation'] &gt;= cutoff4]                                                        \n                                                    \n\n    return (df_pt, df_short, df_med, df_long, df_extralong)\n\n\ndf_point, df0, df1, df2 = select_point_filter_baselines(baltoro_mid_point_cube_df, 60, 120, 180)\n\n\npd.to_numeric(df0.mid_date)\na = pd.to_datetime(df0.mid_date)\na.dt.to_pydatetime().\n\nAttributeError: 'numpy.ndarray' object has no attribute 'dt'\n\n\n\ndf0.mid_date.iloc[0]\n\nTimestamp('2013-05-18 05:30:10.536076032')\n\n\n\nfrom sklearn.gaussian_process import GaussianProcessRegressor\nfrom sklearn.gaussian_process.kernels import Matern, WhiteKernel, ConstantKernel, ExpSineSquared, RationalQuadratic, RBF\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.pipeline import Pipeline\n\n\nmatern_kernel = 1.0**2* Matern(length_scale=1, nu=3/2, length_scale_bounds = (1e-6,2e2)) + WhiteKernel(noise_level=1, noise_level_bounds = (1e-6,1e3))\n\n\ndf0.mid_date.values\n\narray(['2013-05-18T05:30:10.536076032', '2013-05-18T05:30:10.536076032',\n       '2013-05-18T05:30:10.536076032', ...,\n       '2022-02-21T05:49:02.535076096', '2022-02-21T05:49:02.535076096',\n       '2022-02-21T05:49:02.535076096'], dtype='datetime64[ns]')\n\n\n\ndef run_vis_GP_model(df, label, kernel):\n\n    X = df['days_since_middate0'].values\n    print('# obs in this group: ', len(X))\n    X = X.reshape(-1,1)\n\n    y = df['v']\n    parameters = {'kernel':('matern', 'rbf'), 'L':[1, 10]}\n    \n    gp = GaussianProcessRegressor(kernel=kernel, normalize_y=True, optimizer='fmin_l_bfgs_b')\n    #gp = gaussian_process.GaussianProcessRegressor(kernormalize_y=True, optimizer='fmin_l_bfgs_b')\n    #clf = GridSearchCV(gp, parameters)\n    gp.fit(X,y)\n    print(gp.kernel_)    \n    print('log marginal likelihood: ', gp.log_marginal_likelihood(gp.kernel_.theta))\n\n    #summary(gp)\n    #print(gp.kernel_.theta)\n    print('--')\n    #print(gp.kernel_.bounds)\n    print('--')\n    print('get params: \\n', gp.kernel_.get_params())\n    print('--') \n    print(gp.kernel_.k1)\n    print(gp.kernel_.k2)\n    \n    #X_pred = np.linspace(0, df.days_since_middate0.max()).reshape(-1,1)\n    X_pred = np.reshape(np.array(df0['mid_date']), (-1,1))\n    y_pred, sigma = gp.predict(X_pred, return_std=True)\n\n    fig, ax = plt.subplots()\n\n    df.plot(x='mid_date', y='v', ax=ax, linestyle='None', marker='o')\n    ax.plot(X_pred, y_pred, 'r')\n    ax.fill_between(X_pred.ravel(),\n                    y_pred + 1.96 * sigma,\n                    y_pred - 1.96 * sigma,\n                   facecolor='lavender')\n    fig.suptitle(label)\n    return X_pred\n#df_point, df0, df1, df2\n\n\nx_test = run_vis_GP_model(df0, 'GP regression on baltoro mid point (3x3 cube) \\n only obs where temp baseline = 60-120 days', matern_kernel)\n\n# obs in this group:  2247\n\n\nUFuncTypeError: ufunc 'divide' cannot use operands with types dtype('&lt;M8[ns]') and dtype('float64')\n\n\n\nrun_vis_GP_model(df1, 'GP regression on baltoro mid point (3x3 cube) \\n only obs where temp baseline = 120-180 days', matern_kernel)\n\n# obs in this group:  2094\n1.1**2 * Matern(length_scale=45.7, nu=1.5) + WhiteKernel(noise_level=0.101)\nlog marginal likelihood:  -750.1028590108908\n[ 0.19641228  3.82238977 -2.296495  ]\n--\n[[-11.51292546  11.51292546]\n [-13.81551056   5.29831737]\n [-13.81551056   6.90775528]]\n--\nget params: \n {'k1': 1.1**2 * Matern(length_scale=45.7, nu=1.5), 'k2': WhiteKernel(noise_level=0.101), 'k1__k1': 1.1**2, 'k1__k2': Matern(length_scale=45.7, nu=1.5), 'k1__k1__constant_value': 1.217028553178565, 'k1__k1__constant_value_bounds': (1e-05, 100000.0), 'k1__k2__length_scale': 45.713322210030384, 'k1__k2__length_scale_bounds': (1e-06, 200.0), 'k1__k2__nu': 1.5, 'k2__noise_level': 0.10061086707700533, 'k2__noise_level_bounds': (1e-06, 1000.0)}\n--\n1.1**2 * Matern(length_scale=45.7, nu=1.5)\nWhiteKernel(noise_level=0.101)\n\n\n\n\n\n\nrun_vis_GP_model(df2, 'GP regression on baltoro mid point (3x3 cube) \\n only obs where temp baseline &gt;180 days', matern_kernel)\n\n# obs in this group:  7565\n0.693**2 * Matern(length_scale=10.2, nu=1.5) + WhiteKernel(noise_level=0.385)\nlog marginal likelihood:  -7609.358455501531\n[-0.73338996  2.32094109 -0.95325603]\n--\n[[-11.51292546  11.51292546]\n [-13.81551056   5.29831737]\n [-13.81551056   6.90775528]]\n--\nget params: \n {'k1': 0.693**2 * Matern(length_scale=10.2, nu=1.5), 'k2': WhiteKernel(noise_level=0.385), 'k1__k1': 0.693**2, 'k1__k2': Matern(length_scale=10.2, nu=1.5), 'k1__k1__constant_value': 0.48027810393060105, 'k1__k1__constant_value_bounds': (1e-05, 100000.0), 'k1__k2__length_scale': 10.185254991041784, 'k1__k2__length_scale_bounds': (1e-06, 200.0), 'k1__k2__nu': 1.5, 'k2__noise_level': 0.38548383245093976, 'k2__noise_level_bounds': (1e-06, 1000.0)}\n--\n0.693**2 * Matern(length_scale=10.2, nu=1.5)\nWhiteKernel(noise_level=0.385)\n\n\n\n\n\n\nfig, ax = plt.subplots()\nbaltoro.outline.to_crs('EPSG:32643').plot(ax=ax, facecolor='None')\nbaltoro_mid_point.point_gdf.to_crs('EPSG:32643').plot(ax=ax)\n\n&lt;Axes: &gt;\n\n\n\n\n\n\nbaltoro.outline.to_crs('EPSG:32643')\n\n&lt;Projected CRS: PROJCS[\"unknown\",GEOGCS[\"GCS_unknown\",DATUM[\"WGS_1 ...&gt;\nName: unknown\nAxis Info [cartesian]:\n- [east]: Easting (metre)\n- [north]: Northing (metre)\nArea of Use:\n- undefined\nCoordinate Operation:\n- name: unnamed\n- method: Transverse Mercator\nDatum: World Geodetic System 1984\n- Ellipsoid: WGS 84\n- Prime Meridian: Greenwich\n\n\n\ndf0\n\n\n\n\n\n\n\n\nmid_date\ny\nx\nv\nimg_separation\nstep_count\nmapping\ndays_since_middate0\n\n\n\n\n20168\n2013-05-18 05:30:10.536076032\n3955627.5\n624892.5\n204.0\n115.0\n12218\n0\n40\n\n\n20163\n2013-05-18 05:30:10.536076032\n3955747.5\n624652.5\n193.0\n115.0\n12218\n0\n40\n\n\n20162\n2013-05-18 05:30:10.536076032\n3955867.5\n624892.5\n177.0\n115.0\n12218\n0\n40\n\n\n20161\n2013-05-18 05:30:10.536076032\n3955867.5\n624772.5\n184.0\n115.0\n12218\n0\n40\n\n\n20167\n2013-05-18 05:30:10.536076032\n3955627.5\n624772.5\n199.0\n115.0\n12218\n0\n40\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n14061\n2022-02-21 05:49:02.535076096\n3955747.5\n624652.5\n76.0\n61.0\n8475\n0\n3241\n\n\n14062\n2022-02-21 05:49:02.535076096\n3955747.5\n624772.5\n107.0\n61.0\n8475\n0\n3241\n\n\n14063\n2022-02-21 05:49:02.535076096\n3955747.5\n624892.5\n103.0\n61.0\n8475\n0\n3241\n\n\n14064\n2022-02-21 05:49:02.535076096\n3955627.5\n624652.5\n112.0\n61.0\n8475\n0\n3241\n\n\n14066\n2022-02-21 05:49:02.535076096\n3955627.5\n624892.5\n97.0\n61.0\n8475\n0\n3241\n\n\n\n\n2247 rows × 8 columns\n\n\n\n\ndf0['mid_date'].min\ndf0['mid_date'].max\n\n&lt;bound method NDFrame._add_numeric_operations.&lt;locals&gt;.max of 20168   2013-05-18 05:30:10.536076032\n20163   2013-05-18 05:30:10.536076032\n20162   2013-05-18 05:30:10.536076032\n20161   2013-05-18 05:30:10.536076032\n20167   2013-05-18 05:30:10.536076032\n                     ...             \n14061   2022-02-21 05:49:02.535076096\n14062   2022-02-21 05:49:02.535076096\n14063   2022-02-21 05:49:02.535076096\n14064   2022-02-21 05:49:02.535076096\n14066   2022-02-21 05:49:02.535076096\nName: mid_date, Length: 2247, dtype: datetime64[ns]&gt;\n\n\n\nx_test.squeeze()\n\narray([   0.        ,   66.14285714,  132.28571429,  198.42857143,\n        264.57142857,  330.71428571,  396.85714286,  463.        ,\n        529.14285714,  595.28571429,  661.42857143,  727.57142857,\n        793.71428571,  859.85714286,  926.        ,  992.14285714,\n       1058.28571429, 1124.42857143, 1190.57142857, 1256.71428571,\n       1322.85714286, 1389.        , 1455.14285714, 1521.28571429,\n       1587.42857143, 1653.57142857, 1719.71428571, 1785.85714286,\n       1852.        , 1918.14285714, 1984.28571429, 2050.42857143,\n       2116.57142857, 2182.71428571, 2248.85714286, 2315.        ,\n       2381.14285714, 2447.28571429, 2513.42857143, 2579.57142857,\n       2645.71428571, 2711.85714286, 2778.        , 2844.14285714,\n       2910.28571429, 2976.42857143, 3042.57142857, 3108.71428571,\n       3174.85714286, 3241.        ])\n\n\n\nx_test.shape\n\n(50, 1)\n\n\n\nimport datetime\ntoday = datetime.datetime.now()\ncurrent_month = today.year + today.month / 12\nX_test = np.linspace(start=1958, stop=current_month, num=1_000).reshape(-1, 1)\n\n\ntoday\n\ndatetime.datetime(2023, 9, 27, 13, 22, 41, 180566)\n\n\n\ncurrent_month\n\n2023.75\n\n\n\npd.timestamp(df0['mid_date'].iloc[0])\n\nAttributeError: module 'pandas' has no attribute 'timestamp'\n\n\n\nmiddate0 = .datetime.datetime.fromtimestamp(df0['mid_date'].iloc[0].date())\n\nSyntaxError: invalid syntax (2081673890.py, line 1)"
  },
  {
    "objectID": "index.html#then-create-an-object-of-the-glacier-class",
    "href": "index.html#then-create-an-object-of-the-glacier-class",
    "title": "itslivetools",
    "section": "Then, create an object of the Glacier class:",
    "text": "Then, create an object of the Glacier class:\n\nbaltoro = access_setup.Glacier('baltoro', rgi_id, wd_path, l12_url, centerline_14_path, 'EPSG:32643')\n\n2023-10-12 11:36:50: oggm.cfg: Reading default parameters from the OGGM `params.cfg` configuration file.\n2023-10-12 11:36:50: oggm.cfg: Multiprocessing switched OFF according to the parameter file.\n2023-10-12 11:36:50: oggm.cfg: Multiprocessing: using slurm allocated processors (N=4)\n2023-10-12 11:36:50: oggm.cfg: Multiprocessing switched ON after user settings.\n2023-10-12 11:37:01: oggm.workflow: init_glacier_directories from prepro level 2 on 1 glaciers.\n2023-10-12 11:37:01: oggm.workflow: Execute entity tasks [gdir_from_prepro] on 1 glaciers\n2023-10-12 11:37:03: oggm.workflow: Execute entity tasks [glacier_masks] on 1 glaciers\n2023-10-12 11:37:07: oggm.workflow: Execute entity tasks [velocity_to_gdir] on 1 glaciers\n2023-10-12 11:37:08: oggm.workflow: Execute entity tasks [add_consensus_thickness] on 1 glaciers\n\n\nThis object has a number of properties and methods. The Glacier object stores information about the glacier including raster and vector datasets. All of the data in the Glacier object is static in time (ie. no image-pair time series, this data is stored in the Point object (currently): - A geopandas GeoDataFrame representing the main centerline as identified by OGGM (centerliner_main) - path to the locally stored file representing the centerlines - A geopandas GeoDataFrame representing all centerlines of the specified glacier (from OGGM) - The OGGM glacier directory for the specified glacier (g) - gridded_data An xarray Dataset containing gridded data from the OGGM directory for the specified glacier. This contains variables representing topography, land/glacier mask, x-component of velocity (ITS_LIVE mosaic), y-component of velocity (ITS_LIVE mosaic), magnitude of velocity (ITS_LIVE mosaic), ice thickness (consensus modelled ice thickness). All of this data is in EPSG:4326, latlon projection - utm_gridded_data, the same as gridded_data but projected to the local UTM zone -"
  }
]